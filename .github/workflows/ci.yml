name: CI

on:
  push:
  pull_request:
    branches: [main]

jobs:
  lint:
    name: 'Lint'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
      - name: Lint
        run: yarn lint

  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Build
        run: yarn build

      - name: Store lib
        uses: actions/upload-artifact@v4
        with:
          name: lib
          path: lib/

  test-browser:
    name: 'Test - browser'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Restore lib
        uses: actions/download-artifact@v4
        with:
          name: lib
          path: lib/

      - name: Test
        run: yarn test:browser

  test-nodejs:
    name: 'Test - Node.js'
    needs: [build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ["16", "18", "20", "node"]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.version }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Restore lib
        uses: actions/download-artifact@v4
        with:
          name: lib
          path: lib/

      - name: Test
        run: yarn test:nodejs
      
  release:
    name: Semantic release
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [lint, build, test-browser, test-nodejs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false      
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
      - name: Cache node_modules
        id: cache-node_modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install deps
        if: steps.cache-node_modules.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - name: Restore lib
        uses: actions/download-artifact@v4
        with:
          name: lib
          path: lib/

      - name: Release
        run: yarn release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}        
